[{"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/index.js":"1","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/App.js":"2","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/reportWebVitals.js":"3","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/LoginPage.js":"4","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/HomePage.js":"5","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/ContactUsPage.js":"6"},{"size":500,"mtime":1615145539757,"results":"7","hashOfConfig":"8"},{"size":1788,"mtime":1615334528220,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1615145539758,"results":"10","hashOfConfig":"8"},{"size":3884,"mtime":1615334191977,"results":"11","hashOfConfig":"8"},{"size":444,"mtime":1615334191975,"results":"12","hashOfConfig":"8"},{"size":2158,"mtime":1615334223665,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"elqvpr",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/index.js",[],["28","29"],"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/App.js",["30","31"],"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/reportWebVitals.js",[],"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/LoginPage.js",["32","33","34","35","36"],"import React, { Component } from 'react'\nimport './css/LoginPage.css'\nimport { Link, Redirect, withRouter, useHistory } from 'react-router-dom'\n\nexport default class LoginPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            submitted: false,\n            title: 'Scraper Log In',\n            redirect: false\n        };\n\n        const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[a-z]{2,}$$/;\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleCreate = this.handleCreate.bind(this);\n    }\n\n    append(parent, el) {\n        return parent.appendChild(el);\n    }\n\n    createNode(element) {\n        return document.createElement(element);\n    }\n\n    handleLogin(event){\n        const fetchUrl = `/api/loginUser/`\n        const that = this\n        // const history = useHistory();\n        fetch(fetchUrl, {\n            method: 'POST',\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password\n            })\n        })\n        .then((response) => response.json())\n        .then(function(data) {\n            console.log(data);\n            if(data.result == 'OK')\n                {\n                // Redirect them to the Homepage\n                that.setState({ redirect: true});\n                }\n            else\n                {\n                // Redirect them to the LoginPage\n                console.log(\"Redirecting to LoginPage\");\n                }\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n            // history.push(\"/HomePage\")\n        // event.preventDefault();\n    }\n\n    handleEmailChange(event){\n        this.setState({email: event.target.value});\n    }\n\n    handlePasswordChange(event){\n        this.setState({password: event.target.value});\n    }\n\n    handleCreate(event){\n\n    }\n\n    render() {\n        const { redirect } = this.state.redirect;\n        if (redirect) {\n            return (<Redirect to=\"/HomePage\"/>);\n        }\n        return (\n                <div className=\"loginPageContent\">\n                <div className=\"loginPageTitleContainer\">\n                    {/* <text className=\"loginPageTitle\">\n                        {this.props.title}\n                    </text> */}\n            </div>\n                <div className=\"loginPageContainer\">\n                    <div className=\"contactUsContainer\">\n                        <button onClick={this.handleContactUs} className=\"contactUsButton\">Contact Us</button>\n                    </div>\n                    <div className=\"loginFormContainer\">\n                        <form className=\"loginForm\">\n                            <input type=\"email\" value={this.state.email} required requirederror=\"Email Address required.\" validate={this.emailRegex} validateerror=\"Please provide a valid email address.\" placeholder=\"Email\" onChange={this.handleEmailChange} className=\"emailInputBox\" />\n                            <input type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handlePasswordChange} className=\"passwordInputBox\" />\n                            <input type=\"button\" value=\"Forgot Password\" className=\"forgotPasswordButton\" />\n                            <input type=\"submit\" value=\"Login\" className=\"loginButton\" onClick={() => {this.handleLogin();}}/>\n                        </form>\n                    </div>\n                    <div className=\"createContainer\">\n                        <button onClick={this.handleCreate} className=\"createButton\">Create</button>\n                    </div>\n                </div>\n                </div>\n            )\n        }\n    }","/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/HomePage.js",[],"/Users/abdullahkarim/Documents/GitHub/BBA-SocialScraper/my-app/src/components/ContactUsPage.js",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":20,"column":3,"nodeType":"45","messageId":"46","endLine":20,"endColumn":7},{"ruleId":"43","severity":1,"message":"47","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},{"ruleId":"43","severity":1,"message":"48","line":3,"column":26,"nodeType":"45","messageId":"46","endLine":3,"endColumn":36},{"ruleId":"43","severity":1,"message":"49","line":3,"column":38,"nodeType":"45","messageId":"46","endLine":3,"endColumn":48},{"ruleId":"43","severity":1,"message":"50","line":16,"column":15,"nodeType":"45","messageId":"46","endLine":16,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":46,"column":28,"nodeType":"53","messageId":"54","endLine":46,"endColumn":30},{"ruleId":"43","severity":1,"message":"50","line":14,"column":15,"nodeType":"45","messageId":"46","endLine":14,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":55,"column":203,"nodeType":"57","endLine":55,"endColumn":222},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'useHistory' is defined but never used.","'emailRegex' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]